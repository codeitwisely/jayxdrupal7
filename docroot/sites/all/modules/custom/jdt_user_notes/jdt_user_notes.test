<?php
/**
 * @file
 * Tests for CRUDS Functions used for the jdt_user_notes module.
 */
class JdtUserNotesTestCase extends DrupalWebTestCase {
  // The user to who we'll give privileges for the tests.
  protected $privilegedUser;

  public static function getInfo() {
    return array(
      'name' => 'Jdt user notes test of CRUD functions',
      'description' => 'Ensure that the CRUD functions work',
      'group' => 'Jdt user notes',
    );
  }

  public function setUp() {
    // Enable any modules required for the test this should be an array of,
    // module names.
    parent::setUp(array('jdt_user_notes'));
    // Create and log in our privilegedUser.
    $this->privilegedUser = $this->drupalCreateUser(
      array(
        'view user notes',
        'add user notes',
        'edit own user notes',
        'edit any user notes',
        'delete own user notes',
        'delete any user notes',
      )
    );
    $this->drupalLogin($this->privilegedUser);
  }

  /**
   * We will successively test the insert function,
   * the select function,
   * the update function,
   * and the delete function.
   */
  public function testJdtUserNotesCrud() {
    $entry = array(
      'article_nid' => 67,
      'author_uid' => 7,
      'note_text' => 'Here is the first test',
    );
    module_load_include('inc', 'jdt_user_notes', 'jdt_user_notes.crud');

    // Test of the insert function.
    $insert = _jdt_user_notes_create_note($entry);
    $this->assertTrue($insert, '1 entry inserted.', 'other');

    // Test of the select function.
    $note_id = 1;
    $select = _jdt_user_notes_note_select($note_id);
    $this->assertTrue($select, '1 entry selected.', 'other');

    // Test of the update function.
    $entry = array(
      'note_id' => 1,
      'article_nid' => 63,
      'author_uid' => 1,
      'note_text' => 'Here the modified note',
    );
    $update = _jdt_user_notes_updt_note($entry);
    $this->assertTrue($update, '1 entry updated.', 'other');

    // Test of the delete function.
    $delete = _jdt_user_notes_del_note($note_id);
    $this->assertTrue($delete, '1 entry deleted.', 'other');
  }
}
