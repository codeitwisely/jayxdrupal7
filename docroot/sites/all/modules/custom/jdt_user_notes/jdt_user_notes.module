<?php
/**
 * @file
 * jdt_user_notes.module
 * This file includes hooks for permissions and other.
 */

/**
 * Implements hook_permission().
 * @return
 *   Array of permissions.
 */
function jdt_user_notes_permission() {
  return array(
    'view user notes' => array(
      'title' => t('View any user note'),
      'description' => t('View any published user notes.'),
    ),
    'add user notes' => array(
      'title' => t('Create new user note'),
      'description' => t('Add user notes.'),
    ),
    'edit own user notes' => array(
      'title' => t('Edit own user note'),
      'description' => t('Edit own user notes.'),
    ),
    'edit any user notes' => array(
      'title' => t('Edit any user note'),
      'description' => t('Edit any user notes.'),
    ),
    'delete own user notes' => array(
      'title' => t('Delete own user note'),
      'description' => t('Delete own user notes.'),
    ),
    'delete any user notes' => array(
      'title' => t('Delete any user note'),
      'description' => t('Delete any user notes.'),
    ),
  );
}

/**
 * TASK 25.
 */

/**
 * Implements hook_block_info().
 */
function jdt_user_notes_block_info() {
  $blocks['articles_info'] = array(
    'info' => t('Article Notes Information')
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function jdt_user_notes_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'articles_info':
      $block['subject'] = t('Site Information');
      $block['content'] = _jdt_user_notes_content_number();
    break;
  }
  return $block;
}

/**
 * This function will return statistics informations for the website.
 * @return
 *   The statistic block.
 */
function _jdt_user_notes_content_number() {
  $number_of_articles = _jdt_user_notes_number_articles();
  $number_of_notes = _jdt_user_notes_number_notes();
  $number_of_users = _jdt_user_notes_number_users();
  $output = "Number of Articles: " . $number_of_articles . "<br/>";
  $output .= "Number of Notes: " . $number_of_notes . "<br/>";
  $output .= "Number of Users: " . $number_of_users;

  return $output;
}

/**
 * This function will return the number of articles on the website.
 * @param $content_type
 *   The content type that we want to filter on.
 * @return
 *   Return the Number of Articles on the site.
 */
function _jdt_user_notes_number_articles($content_type = 'article_1') {
  $query = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('n.type', $content_type, '=');
  $number_of_articles = $query
    ->countQuery()
    ->execute()
    ->fetchField();

  return $number_of_articles;
}

/**
 * This function will return the number of notes on the website.
 * @return
 *   Return the number of Notes on the site.
 */
function _jdt_user_notes_number_notes() {
  $query = db_select('jdt_user_notes', 'jun')
    ->fields('jun', array('note_id'));
  $number_of_notes = $query
    ->countQuery()
    ->execute()
    ->fetchField();

  return $number_of_notes;
}

/**
 * This function will return the number of active users on the website.
 * @param $active
 *   We want to filter on the active users.
 * @return
 *   Return the number of active users on the site.
 */
function _jdt_user_notes_number_users($active = 1) {
  $query = db_select('users', 'u')
    ->fields('u', array('uid'))
    ->condition('u.status', $active, '=');
  $number_of_users = $query
    ->countQuery()
    ->execute()
    ->fetchField();

  return $number_of_users;
}
