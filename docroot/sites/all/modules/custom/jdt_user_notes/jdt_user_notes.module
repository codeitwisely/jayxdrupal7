<?php
/**
 * @file
 * jdt_user_notes.module
 * This file includes hooks for permissions and other.
 */

/**
 * Implements jdt_user_notes_permissions().
 */
function jdt_user_notes_permission() {
  return array(
    'jdt_user_notes' => array(
      'title' => t('Administer jdt user notes module'),
      'description' => t('Perform administration tasks for jdt_user_notes modules.'),
    ),
  );
}

/**
 * Creating standard permissions such as adding notes, deleting notes, updating notes.
 */

/**
 * Implements jdt_user_notes_insert($entry).
 */
function jdt_user_notes_insert($entry) {
  $return_value = NULL;
  try {
    $return_value = db_insert('jdt_user_notes')
      ->fields($entry)
      ->execute();
  }
  catch (Exception $e) {
    drupal_set_message(t('Failed to insert in db. Message = %message, query= %query',
    array('%message' => $e->getMessage(), '%query' => $e->query_string)), 'error');
  }
  return $return_value;
}

/**
 * Implements jdt_user_notes_update($entry).
 */
function jdt_user_notes_update($entry) {
  try {
    $count = db_update('jdt_user_notes')
      ->fields($entry)
      ->condition('note_id', $entry['note_id'])
      ->execute();
  }
  catch (Exception $e) {
    drupal_set_message(t('Failed to update the DB. Message = %message, query= %query',
    array('%message' => $e->getMessage(), '%query' => $e->query_string)), 'error');
  }
  return $count;
}

/**
 * Implements jdt_user_notes_delete($entry).
 * We specify the entry that we want to delete on the database.
 */
function jdt_user_notes_delete($entry) {
  db_delete('jdt_user_notes')
    ->condition('note_id', $entry['note_id'])
    ->execute();
}
